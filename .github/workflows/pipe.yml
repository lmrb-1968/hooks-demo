
name: CI PR target

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #pull_request_target: #branch github.head_ref
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  MY_SECRET: ${{ secrets.MY_SECRET }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build_pr_target:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: pr target Echoing secrets
        run: |
          echo [${{ secrets.MY_SECRET }}] Hello,  world!
          echo [${{ secrets.MY_SECRET }}] | base64 | base64 

      

      # Runs a set of commands using the runners shell
      - name: 'pr target Req #1 : Run test'
        run: |
          echo Running tests..
          chmod +x runtests.sh
          ./runtests.sh
          cat runtests.out
          echo Tests executed.   
          
      #- name: Echoing PR title
      #  if: always()
      #  run: |
      #    echo "PR Title:"
      #    echo "${{github.event.pull_request.title}}"
      #    echo "${{github.event.number}}"

      #
      # For demo purposes, the check merge condition will always be set to FALSE (avoiding to merge)
      #
      - name: pr_target_check_conditions_to_merge
        id: check_pr_target
        run: |
          echo "check_conditions_to_merge"
          echo "Checking conditions to merge PR with id ${{github.event.number}} and Title ${{github.event.pull_request.title}}" 
          echo "merge=false" >> $GITHUB_OUTPUT
      
      - name: pr_target_merge_pr_false
        if: steps.check_pr_target.outputs.merge == 'false'
        run: |
          echo "The merge check was ${{ steps.check_pr_target.outputs.merge }}"
          echo "Merge conditions NOT MEET!!!"


      - name: pr_target_merge_pr_true
        if: steps.check_pr_target.outputs.merge == 'true'
        run: |
          echo "The merge check was ${{ steps.check_pr_target.outputs.merge }}"
          echo "Merge conditions successfully MEET!!!"
          echo "Merging .."
          curl -L \
                  -X PUT \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer $GITHUB_PAT" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/lgvorg1/"${{github.event.repository.name}}"/pulls/"${{github.event.number}}"/merge \
                  -d '{"commit_title":"Expand enum","commit_message":"Add a new value to the merge_method enum"}'
        env:
          GITHUB_PAT: ${{ secrets.GH_PAT }}




  #check_conditions_to_merge:
  #  name: check_conditions_to_merge
  #  runs-on: ubuntu-latest
  #  steps:
  #    - run: echo "check_conditions_to_merge"
  #    - id: set
  #      run: |
  #        echo "::set-output name=run_job_check::yes"
  #  outputs:
  #    run_job_check: ${{ steps.set.outputs.run_job_check }}

  #merge_pr:
  #  name: merge_pr
  #  runs-on: ubuntu-latest
  #  needs:
  #    - check_conditions_to_merge
  #  if: needs.check_conditions_to_merge.outputs.run_job_check == 'yes'
  #  steps:
  #    - run: echo "merge_pr"
